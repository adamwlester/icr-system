<VisualMicro>
  <Program Name="FeederDue" Ext=".ino" Location="C:\Users\lester\MeDocuments\Research\BarnesLab\Study_ICR\Code\Arduino\FeederDue">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\lester\AppData\Local\Temp\VMicroBuilds\FeederDue\arduino_due_x" SketchName="FeederDue" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 25;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE_HARDWARESERIAL1 13;VM_DEBUGGER_TYPE_HARDWARESERIAL2 14;VM_DEBUGGER_TYPE_HARDWARESERIAL3 15;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_USB;VM_DEBUGGER_SUB_TYPE VM_DEBUGGER_TYPE_USB_SAM;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="arduino" Platform="sam" Architecture="4.8.3-2014q1">
      <Board Name="arduino_due_x" Description="Arduino Due (Native USB Port)" CoreFolder="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8\cores\arduino" VariantFullPath="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8\variants\arduino_due_x" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\lester\MeDocuments\AppData\Arduino" name="Arduino Due (Native USB Port)" vid.0="0x2341" pid.0="0x003e" vid.1="0x2A03" pid.1="0x003e" upload.tool="bossac" upload.protocol="sam-ba" upload.maximum_size="524288" upload.use_1200bps_touch="true" upload.wait_for_upload_port="true" upload.native_usb="true" build.mcu="cortex-m3" build.f_cpu="84000000L" build.usb_manufacturer="&quot;Arduino LLC&quot;" build.usb_product="&quot;Arduino Due&quot;" build.board="SAM_DUE" build.core="arduino" build.extra_flags="-D__SAM3X8E__ -mthumb {build.usb_flags}" build.ldscript="linker_scripts/gcc/flash.ld" build.variant="arduino_due_x" build.variant_system_lib="libsam_sam3x8e_gcc_rel.a" build.vid="0x2341" build.pid="0x003e" runtime.ide.path="C:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8\system" runtime.ide.version="10609" target_package="arduino" target_platform="sam" runtime.hardware.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam" originalid="arduino_due_x" intellisense.tools.path="{runtime.ide.path}/hardware/tools/g++_arm_none_eabi" intellisense.include.paths="{runtime.tools.arm-none-eabi-gcc.path}/arm-none-eabi\include\c++\4.8.3;{runtime.tools.arm-none-eabi-gcc.path}/arm-none-eabi/include/c++/4.8.3/arm-none-eabi/;{runtime.tools.arm-none-eabi-gcc.path}/arm-none-eabi/include/;{runtime.tools.arm-none-eabi-gcc.path}\lib\gcc\arm-none-eabi\4.8.3\include;{build.core.coresparentfolder.vmresolved}\system\CMSIS\Device\ATMEL\;{build.core.coresparentfolder.vmresolved}\system\libsam;{build.core.coresparentfolder.vmresolved}\system\libsam\include;{build.core.coresparentfolder.vmresolved}\system\CMSIS\CMSIS\Include\;{build.core.coresparentfolder.vmresolved}\system\CMSIS\CMSIS\Include\;{vm.boardsource.path}\system\CMSIS\CMSIS\Include\;{vm.boardsource.path}\system\CMSIS\Device\ATMEL\;{vm.boardsource.path}\system\libsam;{vm.boardsource.path}\system\libsam\include;{intellisense.tools.path}\arm-none-eabi\include;{intellisense.tools.path}\arm_none_eabi\include\;{intellisense.tools.path}\lib\gcc\arm-none-eabi\4.4.1\include;{intellisense.tools.path}\lib\gcc\arm-none-eabi\4.4.1\include\;{build.core.coresparentfolder.vmresolved}/system/CMSIS/Device/ATMEL/sam3xa/include/pio;{build.core.coresparentfolder.vmresolved}/system/libsam/include;{build.core.coresparentfolder.vmresolved}/CMSIS/CMSIS/Include/;{build.core.coresparentfolder.vmresolved}/system/CMSIS/Device/ATMEL/sam3xa/include;{build.core.coresparentfolder.vmresolved}\system/libsam;{build.core.coresparentfolder.vmresolved}\system/CMSIS/Device/ATMEL;{build.core.coresparentfolder.vmresolved}\system/CMSIS/Device/ATMEL/sam3xa/include;" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" version="1.6.8" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.arm-none-eabi-gcc.path}/bin/" compiler.c.cmd="arm-none-eabi-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -Dprintf=iprintf -MMD" compiler.c.elf.cmd="arm-none-eabi-gcc" compiler.c.elf.flags="-Os -Wl,--gc-sections" compiler.S.cmd="arm-none-eabi-gcc" compiler.S.flags="-c -g -x assembler-with-cpp" compiler.cpp.cmd="arm-none-eabi-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -ffunction-sections -fdata-sections -nostdlib -fno-threadsafe-statics --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -Dprintf=iprintf -MMD" compiler.ar.cmd="arm-none-eabi-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="arm-none-eabi-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O binary" compiler.elf2hex.cmd="arm-none-eabi-objcopy" compiler.ldflags="" compiler.size.cmd="arm-none-eabi-size" compiler.define="-DARDUINO=" compiler.combine.flags="-u _sbrk -u link -u _close -u _fstat -u _isatty -u _lseek -u _read -u _write -u _exit -u kill -u _getpid" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.cpp.extra_flags="" compiler.S.extra_flags="" compiler.ar.extra_flags="" compiler.elf2hex.extra_flags="" compiler.libsam.c.flags="&quot;-I{build.system.path}/libsam&quot; &quot;-I{build.system.path}/CMSIS/CMSIS/Include/&quot; &quot;-I{build.system.path}/CMSIS/Device/ATMEL/&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} -DUSBCON '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mcpu={build.mcu} -mthumb -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {compiler.libsam.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mcpu={build.mcu} -mthumb -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {compiler.libsam.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.S.cmd}&quot; {compiler.S.flags} -mcpu={build.mcu} -mthumb -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {compiler.libsam.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; -mcpu={build.mcu} -mthumb {compiler.c.elf.flags} &quot;-T{build.variant.path}/{build.ldscript}&quot; &quot;-Wl,-Map,{build.path}/{build.project_name}.map&quot; {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; &quot;-L{build.path}&quot; -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--entry=Reset_Handler -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align -Wl,--start-group {compiler.combine.flags} {object_files} &quot;{build.variant.path}/{build.variant_system_lib}&quot; &quot;{build.path}/{archive_file}&quot; -Wl,--end-group -lm -gcc" recipe.objcopy.bin.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.bin&quot;" recipe.output.tmp_file="{build.project_name}.bin" recipe.output.save_file="{build.project_name}.{build.variant}.bin" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="\.text\s+([0-9]+).*" tools.bossac.path="{runtime.tools.bossac.path}" tools.bossac.cmd="bossac.exe" tools.bossac.cmd.windows="bossac.exe" tools.bossac.upload.params.verbose="-i -d" tools.bossac.upload.params.quiet="" tools.bossac.upload.params.verify="-v" tools.bossac.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} --port={serial.port.file} -U {upload.native_usb} -e -w {upload.verify} -b &quot;{build.path}/{build.project_name}.bin&quot; -R" tools.bossac_remote.upload.pattern="/usr/bin/run-bossac {upload.verbose} --port=ttyATH0 -U {upload.native_usb} -e -w -v -b /tmp/sketch.bin -R" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\etfibjxm.wg0\Micro Platforms\arduino16x" runtime.tools.arm-none-eabi-gcc.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.avrdude.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.0.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.8.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.bossac.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" runtime.tools.bossac-1.6.1-arduino.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" runtime.vm.boardinfo.id="arduino_due_x" runtime.vm.boardinfo.name="arduino_due_x" runtime.vm.boardinfo.desc="Arduino Due (Native USB Port)" runtime.vm.boardinfo.src_location="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8" ide.hint="For all platforms that use Board Manager" ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.6.9" ide.default.version="10609" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference\arduino.cc\en\Reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="arduino16x" location.sketchbook="C:\Users\lester\MeDocuments\AppData\Arduino" build.core.vmresolved="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8\cores\arduino" build.core.parentfolder.vmresolved="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8\cores" build.core.coresparentfolder.vmresolved="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8" build.core.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8" runtime.platform.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8" vm.platformname.name="sam" build.arch="SAM" build.variant.vmresolved="C:\Users\lester\AppData\Local\arduino15\packages\arduino\hardware\sam\1.6.8\variants\arduino_due_x" build.architecture="4.8.3-2014q1" vmresolved.compiler.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1\bin\" vmresolved.tools.path="C:\Users\lester\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" vm.runtime.compiler.showwarnings="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" vm.runtime.compiler.auto_discover_includes="true" vm.last.buildpath="C:\Users\lester\AppData\Local\Temp\VMicroBuilds\FeederDue\arduino_due_x" />
    </Platform>
    <Debug EnableBreak="1" DebugMode="Full" DebugEnabled="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="FeederDue.ino, line 428" Id="76271ae8-484b-404c-8b44-08cdc4f6f07b" Enabled="0" Message="{head[0]}{head[1]}{foot}{msg_id}{vtEnt}{vtTS[1]}{vtRad[1]}{vtTS[0]}{vtRad[0]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}{3}{4}{5}{6}{7}{8}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\lester\medocuments\research\barneslab\study_icr\code\arduino\feederdue\feederdue.ino" FileLine="428" FileColumn="1" FunctionName="ParseSerial()" FunctionLineOffset="61" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='76271ae8-484b-404c-8b44-08cdc4f6f07b'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>421			vtRad[vtEnt] = u.f;
422		}
423		// Check for footer
424		u.b[0] = Serial1.read();
425		foot = u.c[0];
426		if (foot == msg_foot) {
427			cnt++;
--&gt;428			pass = true;
429			//char msg[50];
430			//sprintf(msg, "%s%s,%s,%d,%d,%0.2f,%s)", head, msg_id, vtEnt, vtTS[vtEnt], vtRad[vtEnt], foot);
431			//SerialUSB.print(msg);
432		}
433		else return pass = false;
434	
435	}
436	
437	float CompVT_Err()
</Source>
        <MessageVariables>
          <MessageVariable Name="head[0]" Index="1" />
          <MessageVariable Name="head[1]" Index="2" />
          <MessageVariable Name="foot" Index="3" />
          <MessageVariable Name="msg_id" Index="4" />
          <MessageVariable Name="vtEnt" Index="5" />
          <MessageVariable Name="vtTS[1]" Index="6" />
          <MessageVariable Name="vtRad[1]" Index="7" />
          <MessageVariable Name="vtTS[0]" Index="8" />
          <MessageVariable Name="vtRad[0]" Index="9" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="FeederDue.ino, line 337" Id="803accc0-c773-4821-ad23-45f9b8cd3ba5" Enabled="1" Message="{z[0]}{z[1]}{z[2]}{z[3]}{z[4]}{z[5]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}{3}{4}{5}" Condition="(z[3] &gt; 100) || (z[4] &gt; 100) || (z[5] &gt; 100)" ConditionType="1" CurrentHits="0" File="c:\users\lester\medocuments\research\barneslab\study_icr\code\arduino\feederdue\feederdue.ino" FileLine="337" FileColumn="1" FunctionName="loop()" FunctionLineOffset="54" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='803accc0-c773-4821-ad23-45f9b8cd3ba5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>330				vtRad[1],
331				vtRatHist.CompVel(vtRad[0], vtTS[0]),
332				pixyRatHist.CompVel(pixyPosRad, pixyPosTS),
333				vtRobHist.CompVel(vtRad[1], vtTS[0]),
334			};
335	
336			// Run EKF
--&gt;337			ekf.step(z);
338	
339			// Update error estimate
340			estRatPos = ekf.getX(0);
341			estRobPos = ekf.getX(1);
342			estRatVel = ekf.getX(2);
343			estRobVel = ekf.getX(3);
344	
345			posUpdate[0] = false;
346			posUpdate[1] = false;
</Source>
        <MessageVariables>
          <MessageVariable Name="z[0]" Index="1" />
          <MessageVariable Name="z[1]" Index="2" />
          <MessageVariable Name="z[2]" Index="3" />
          <MessageVariable Name="z[3]" Index="4" />
          <MessageVariable Name="z[4]" Index="5" />
          <MessageVariable Name="z[5]" Index="6" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="FeederDue.ino, line 345" Id="b40fa7e2-cdd7-4e8a-a6e6-5e2dab29f27a" Enabled="0" Message="{estRatPos}{estRobPos}{estRatVel}{estRobVel}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}{3}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\lester\medocuments\research\barneslab\study_icr\code\arduino\feederdue\feederdue.ino" FileLine="345" FileColumn="1" FunctionName="loop()" FunctionLineOffset="62" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='b40fa7e2-cdd7-4e8a-a6e6-5e2dab29f27a'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>338	
339			// Update error estimate
340			estRatPos = ekf.getX(0);
341			estRobPos = ekf.getX(1);
342			estRatVel = ekf.getX(2);
343			estRobVel = ekf.getX(3);
344	
--&gt;345			posUpdate[0] = false;
346			posUpdate[1] = false;
347			posUpdate[2] = false;
348		}
349	
350		// Check for robot speed input
351		if (SerialUSB.available() &gt; 0)
352		{
353			int runSpeed = SerialUSB.parseInt();
354			SerialUSB.println(runSpeed);
</Source>
        <MessageVariables>
          <MessageVariable Name="estRatPos" Index="1" />
          <MessageVariable Name="estRobPos" Index="2" />
          <MessageVariable Name="estRatVel" Index="3" />
          <MessageVariable Name="estRobVel" Index="4" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="FeederDue.ino, line 347" Id="a61f83a6-5972-4e6e-8bd0-1125c1dec14e" Enabled="0" Message="{@Plot.Err.VT_RatPos.Green z[0]}{@Plot.Err.PixyRatPos.Blue z[1]}{@Plot.Err.Est.Red estRatPos}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="(vtTS[0] &gt; 3000) &amp;&amp; (msg_rec % 5 == 0)" ConditionType="1" CurrentHits="0" File="c:\users\lester\medocuments\research\barneslab\study_icr\code\arduino\feederdue\feederdue.ino" FileLine="347" FileColumn="1" FunctionName="loop()" FunctionLineOffset="64" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='a61f83a6-5972-4e6e-8bd0-1125c1dec14e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>340			estRatPos = ekf.getX(0);
341			estRobPos = ekf.getX(1);
342			estRatVel = ekf.getX(2);
343			estRobVel = ekf.getX(3);
344	
345			posUpdate[0] = false;
346			posUpdate[1] = false;
--&gt;347			posUpdate[2] = false;
348		}
349	
350		// Check for robot speed input
351		if (SerialUSB.available() &gt; 0)
352		{
353			int runSpeed = SerialUSB.parseInt();
354			SerialUSB.println(runSpeed);
355			runSpeed = runSpeed * (200 / (9 * PI));
356			// Run robot
</Source>
        <MessageVariables>
          <MessageVariable Name="@Plot.Err.VT_RatPos.Green z[0]" Index="1" />
          <MessageVariable Name="@Plot.Err.PixyRatPos.Blue z[1]" Index="2" />
          <MessageVariable Name="@Plot.Err.Est.Red estRatPos" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="5" Name="FeederDue.ino, line 346" Id="c1387bf7-2e7a-4d17-b3ad-d37e49ae7e55" Enabled="1" Message="{@Plot.Err.VT_RatVel.Green z[3]}{@Plot.Err.PixyRatVel.Blue z[4]}{@Plot.Err.Est.Red estRatVel}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="(vtTS[0] &gt; 3000) &amp;&amp; (msg_rec % 15 == 0)" ConditionType="1" CurrentHits="0" File="c:\users\lester\medocuments\research\barneslab\study_icr\code\arduino\feederdue\feederdue.ino" FileLine="346" FileColumn="1" FunctionName="loop()" FunctionLineOffset="63" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='c1387bf7-2e7a-4d17-b3ad-d37e49ae7e55'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>339			// Update error estimate
340			estRatPos = ekf.getX(0);
341			estRobPos = ekf.getX(1);
342			estRatVel = ekf.getX(2);
343			estRobVel = ekf.getX(3);
344	
345			posUpdate[0] = false;
--&gt;346			posUpdate[1] = false;
347			posUpdate[2] = false;
348		}
349	
350		// Check for robot speed input
351		if (SerialUSB.available() &gt; 0)
352		{
353			int runSpeed = SerialUSB.parseInt();
354			SerialUSB.println(runSpeed);
355			runSpeed = runSpeed * (200 / (9 * PI));
</Source>
        <MessageVariables>
          <MessageVariable Name="@Plot.Err.VT_RatVel.Green z[3]" Index="1" />
          <MessageVariable Name="@Plot.Err.PixyRatVel.Blue z[4]" Index="2" />
          <MessageVariable Name="@Plot.Err.Est.Red estRatVel" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="6" Name="FeederDue.ino, line 165" Id="f67d90df-0426-42e5-a1dd-2bd232108d9d" Enabled="0" Message="{@Plot.A.distCM.Green distCM}{@Plot.A.distRad.Blue distRad}{@Plot.A.distSum.Red distSum}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="nSamp == 6 " ConditionType="1" CurrentHits="0" File="c:\users\lester\medocuments\research\barneslab\study_icr\code\arduino\feederdue\feederdue.ino" FileLine="165" FileColumn="1" FunctionName="class PosArr::CompVel(float radNew)" FunctionLineOffset="31" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f67d90df-0426-42e5-a1dd-2bd232108d9d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>158					dt = tsArr[i + 1] - tsArr[i];
159					dtSum += (float)dt;
160				}
161				// compute vel
162				vel = distSum / (dtSum / (float)1000);
163			}
164			else vel = 0;
--&gt;165			return vel;
166		}
167	};
168	PosArr vtRatHist('A', 4);
169	PosArr pixyRatHist('B', 6);
170	PosArr vtRobHist('C', 4);
171	
172	// Create Fuser class
173	class Fuser : public TinyEKF
174	{
</Source>
        <MessageVariables>
          <MessageVariable Name="@Plot.A.distCM.Green distCM" Index="1" />
          <MessageVariable Name="@Plot.A.distRad.Blue distRad" Index="2" />
          <MessageVariable Name="@Plot.A.distSum.Red distSum" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="7" Name="FeederDue.ino, line 162" Id="277bb026-5097-4499-b158-e8fae0911b15" Enabled="1" Message="{objID}{vel}{distSum}{dtSum}{radArr[0]}{tsArr[0]}{radArr[1]}{tsArr[1]}{radArr[2]}{tsArr[2]}{radArr[3]}{tsArr[3]}{radArr[4]}{tsArr[4]}{radArr[5]}{tsArr[5]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}" Condition="vel &gt; 100" ConditionType="1" CurrentHits="0" File="c:\users\lester\medocuments\research\barneslab\study_icr\code\arduino\feederdue\feederdue.ino" FileLine="162" FileColumn="1" FunctionName="class PosArr::CompVel(float radNew, int tsNew)" FunctionLineOffset="36" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='277bb026-5097-4499-b158-e8fae0911b15'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>155					distCM = distRad * ((140 * PI) / (2 * PI));
156					distSum += distCM;
157					// compute dt
158					dt = tsArr[i + 1] - tsArr[i];
159					dtSum += (float)dt;
160				}
161				// compute vel
--&gt;162				vel = distSum / (dtSum / (float)1000);
163			}
164			else vel = 0;
165			return vel;
166		}
167	};
168	PosArr vtRatHist('A', 4);
169	PosArr pixyRatHist('B', 6);
170	PosArr vtRobHist('C', 4);
171	
</Source>
        <MessageVariables>
          <MessageVariable Name="objID" Index="1" />
          <MessageVariable Name="vel" Index="2" />
          <MessageVariable Name="distSum" Index="3" />
          <MessageVariable Name="dtSum" Index="4" />
          <MessageVariable Name="radArr[0]" Index="5" />
          <MessageVariable Name="tsArr[0]" Index="6" />
          <MessageVariable Name="radArr[1]" Index="7" />
          <MessageVariable Name="tsArr[1]" Index="8" />
          <MessageVariable Name="radArr[2]" Index="9" />
          <MessageVariable Name="tsArr[2]" Index="10" />
          <MessageVariable Name="radArr[3]" Index="11" />
          <MessageVariable Name="tsArr[3]" Index="12" />
          <MessageVariable Name="radArr[4]" Index="13" />
          <MessageVariable Name="tsArr[4]" Index="14" />
          <MessageVariable Name="radArr[5]" Index="15" />
          <MessageVariable Name="tsArr[5]" Index="16" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>